plugins {
    id 'java'
    id 'java-library'
    id "io.freefair.lombok" version "8.10.2"
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'usdot.jpo.ode'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}



dependencies {
    api 'usdot.jpo.ode:j2735-2024-ffm-lib'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.3'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Springdoc 2.8, requires Spring Boot 3.5
    // Ref: https://springdoc.org/#what-is-the-compatibility-matrix-of-springdoc-openapi-with-spring-boot
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    // Needed for springdoc to read javadocs
    // Ref: https://springdoc.org/#javadoc-support
    implementation 'com.github.therapi:therapi-runtime-javadoc:0.15.0'
    annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.hamcrest:hamcrest:3.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

test {
    jvmArgs(["--enable-native-access=ALL-UNNAMED"])
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}








